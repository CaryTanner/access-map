[{"/Users/carytanner/code-projects/bike-msgs/client/src/index.js":"1","/Users/carytanner/code-projects/bike-msgs/client/src/App.js":"2","/Users/carytanner/code-projects/bike-msgs/client/src/redux/store.js":"3","/Users/carytanner/code-projects/bike-msgs/client/src/utils/useWindowSize.js":"4","/Users/carytanner/code-projects/bike-msgs/client/src/components/Header/Header.js":"5","/Users/carytanner/code-projects/bike-msgs/client/src/utils/useRouter.js":"6","/Users/carytanner/code-projects/bike-msgs/client/src/components/Login/Login.js":"7","/Users/carytanner/code-projects/bike-msgs/client/src/components/Footer/Footer.js":"8","/Users/carytanner/code-projects/bike-msgs/client/src/components/SignUp/SignUp.js":"9","/Users/carytanner/code-projects/bike-msgs/client/src/components/MakeReport/MakeReport.js":"10","/Users/carytanner/code-projects/bike-msgs/client/src/components/HomePage/HomePage.js":"11","/Users/carytanner/code-projects/bike-msgs/client/src/redux/slices/authSlice.js":"12","/Users/carytanner/code-projects/bike-msgs/client/src/api/userAuthAPI.js":"13","/Users/carytanner/code-projects/bike-msgs/client/src/utils/utils.js":"14","/Users/carytanner/code-projects/bike-msgs/client/src/components/ReportMap/ReportMap.js":"15","/Users/carytanner/code-projects/bike-msgs/client/src/api/reportsAPI.js":"16","/Users/carytanner/code-projects/bike-msgs/client/src/redux/slices/reportSlice.js":"17","/Users/carytanner/code-projects/bike-msgs/client/src/components/ReportDetails/ReportDetails.js":"18","/Users/carytanner/code-projects/bike-msgs/client/src/components/MapLanding/MapLanding.js":"19","/Users/carytanner/code-projects/bike-msgs/client/src/components/ReportList/ReportList.js":"20","/Users/carytanner/code-projects/bike-msgs/client/src/components/ReportFilter/ReportFilter.js":"21","/Users/carytanner/code-projects/bike-msgs/client/src/utils/useDebounce.js":"22","/Users/carytanner/code-projects/bike-msgs/client/src/redux/slices/mapSlice.js":"23","/Users/carytanner/code-projects/bike-msgs/client/src/components/ContextMap/Map/Map.js":"24","/Users/carytanner/code-projects/bike-msgs/client/src/MapContext.js":"25","/Users/carytanner/code-projects/bike-msgs/client/src/components/ContextMap/ReportsList/ReportsList.js":"26","/Users/carytanner/code-projects/bike-msgs/client/src/components/ContextMap/ReportsFilter/ReportsFilter.js":"27","/Users/carytanner/code-projects/bike-msgs/client/src/components/ContextMap/ReportsFilter/ReportsLayers.js":"28"},{"size":496,"mtime":1609765857291,"results":"29","hashOfConfig":"30"},{"size":1693,"mtime":1610348201635,"results":"31","hashOfConfig":"30"},{"size":410,"mtime":1610264357671,"results":"32","hashOfConfig":"30"},{"size":1117,"mtime":1609414690303,"results":"33","hashOfConfig":"34"},{"size":6117,"mtime":1610024802961,"results":"35","hashOfConfig":"30"},{"size":1174,"mtime":1609755835084,"results":"36","hashOfConfig":"30"},{"size":3746,"mtime":1609824804406,"results":"37","hashOfConfig":"30"},{"size":477,"mtime":1609568872372,"results":"38","hashOfConfig":"30"},{"size":4776,"mtime":1609824816381,"results":"39","hashOfConfig":"30"},{"size":131,"mtime":1609561404830,"results":"40","hashOfConfig":"30"},{"size":434,"mtime":1609844175209,"results":"41","hashOfConfig":"30"},{"size":3714,"mtime":1610035515015,"results":"42","hashOfConfig":"30"},{"size":1358,"mtime":1609828859719,"results":"43","hashOfConfig":"30"},{"size":114,"mtime":1609830587121,"results":"44","hashOfConfig":"30"},{"size":6489,"mtime":1610343706200,"results":"45","hashOfConfig":"30"},{"size":424,"mtime":1609845032204,"results":"46","hashOfConfig":"30"},{"size":2706,"mtime":1610186120697,"results":"47","hashOfConfig":"30"},{"size":262,"mtime":1610002919543,"results":"48","hashOfConfig":"30"},{"size":1824,"mtime":1610181390857,"results":"49","hashOfConfig":"30"},{"size":4099,"mtime":1610122720365,"results":"50","hashOfConfig":"30"},{"size":1343,"mtime":1610121895612,"results":"51","hashOfConfig":"30"},{"size":889,"mtime":1610115739640,"results":"52","hashOfConfig":"30"},{"size":827,"mtime":1610350979860,"results":"53","hashOfConfig":"30"},{"size":2562,"mtime":1610351504618,"results":"54","hashOfConfig":"30"},{"size":101,"mtime":1610264492128,"results":"55","hashOfConfig":"30"},{"size":4051,"mtime":1610348561412,"results":"56","hashOfConfig":"30"},{"size":1606,"mtime":1610349267619,"results":"57","hashOfConfig":"30"},{"size":2374,"mtime":1610348431514,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"dmlxd8",{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1ccdac4",{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"61"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"61"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/Users/carytanner/code-projects/bike-msgs/client/src/index.js",[],["131","132","133"],"/Users/carytanner/code-projects/bike-msgs/client/src/App.js",["134","135","136","137","138"],"import React, { useEffect } from \"react\";\nimport \"./App.less\";\nimport { Button, Grid, Layout, Menu } from \"antd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\"\nimport SignUp from \"./components/SignUp/SignUp\"\nimport MakeReport from \"./components/MakeReport/MakeReport\"\nimport HomePage from \"./components/HomePage/HomePage\"\nimport MapLanding from \"./components/MapLanding/MapLanding\"\nimport ReportDetails from \"./components/ReportDetails/ReportDetails\"\nimport Map from './components/ContextMap/Map/Map'\n\nfunction App() {\n  const { Content } = Layout;\n\n  const { useBreakpoint } = Grid;\n  const { xs } = useBreakpoint();\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Content style={{backgroundColor: '#fff', maxWidth: \"1920px\", minHeight: \"100vh\", margin: \"0 auto\", padding:xs ? \"0 20px\" : \"0 50px\"}}>\n          <Route path=\"/reports/:id\">\n            <ReportDetails />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/makereport\">\n            <MakeReport />\n          </Route>\n          <Route path=\"/map\">\n            <MapLanding />\n          </Route>\n          <Route path=\"/contextmap\">\n            <Map />\n          </Route>\n          <Route path=\"/users\"></Route>\n          <Route exact path=\"/\">\n            <HomePage/>\n          </Route>\n\n\n        </Content>\n      </Switch>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","/Users/carytanner/code-projects/bike-msgs/client/src/redux/store.js",[],"/Users/carytanner/code-projects/bike-msgs/client/src/utils/useWindowSize.js",[],["139","140"],"/Users/carytanner/code-projects/bike-msgs/client/src/components/Header/Header.js",["141","142","143"],"import React, { useState } from \"react\";\nimport styles from \"./Header.module.css\";\nimport {\n  Menu,\n  Row,\n  Col,\n  Grid,\n  Typography,\n  Layout,\n  Popconfirm,\n  message,\n  Avatar,\n  Dropdown,\n  Button,\n} from \"antd\";\nimport { useRouter } from \"../../utils/useRouter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutUser } from \"../../redux/slices/authSlice\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport { handleEnterKey } from \"../../utils/utils\";\n\n\n//@TODO- set menu keys to follow params \n\n\nexport default function Header() {\n  const router = useRouter();\n\n  const { Header } = Layout;\n  //breakpoints from Antd for mobile layout\n  const { useBreakpoint } = Grid;\n  const { xs, sm } = useBreakpoint();\n\n  //navigation functions\n  const clickLink = (page) => {\n    router.push(page);\n  };\n\n  //dispatch logout redux action & show success\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    success();\n  };\n\n  //success pop message\n  const success = () => {\n    message.success(\"Logged out\");\n  };\n\n  //menus for dynamic nav & avatar\n  const { user } = useSelector((state) => state.auth);\n  const avatarInitial = user ? user.name.charAt(0).toUpperCase() : null;\n\n  const avatarMenu = (\n    <Menu>\n      <Menu.Item tabindex={0} key=\"1\">\n        user details!\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <Button tabindex={0} onClick={handleLogout} key=\"2\" type=\"primary\">\n          Logout\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n\n  const loggedOut = () => {\n    return (\n      <>\n        <Menu.Item\n          key=\"sign up\"\n          tabindex={0}\n          onClick={() => clickLink(\"/signup\")}\n          onKeyPress={() => handleEnterKey(clickLink(\"/signup\"))}\n        >\n          Sign Up\n        </Menu.Item>\n        <Menu.Item\n          tabindex={0}\n          key=\"login\"\n          onClick={() => clickLink(\"/login\")}\n          onKeyPress={() => handleEnterKey(clickLink(\"/login\"))}\n        >\n          Login\n        </Menu.Item>\n      </>\n    );\n  };\n  const loggedIn = () => {\n    return (\n      <>\n        <Dropdown overlay={avatarMenu} trigger={[\"click\"]}>\n          <Avatar\n            className={styles.focus}\n            tabindex={0}\n            aria-haspopup=\"true\"\n            style={{\n              backgroundColor: \"#154d42 \",\n              verticalAlign: \"middle\",\n              marginLeft: \"20px\",\n            }}\n            size=\"large\"\n            //keyboard opens dropdown\n            onKeyPress={(event) => handleEnterKey(event.currentTarget.click())}\n          >\n            {avatarInitial}\n          </Avatar>\n        </Dropdown>\n      </>\n    );\n  };\n\n  const links = () => {\n    return (<>\n    <Menu.Item\n        key=\"home\"\n        tabindex={0}\n        onClick={() => clickLink(\"/\")}\n        onKeyPress={() => handleEnterKey(clickLink(\"/\"))}\n      >\n        Home\n      </Menu.Item>\n      <Menu.Item\n        key=\"map\"\n        tabindex={0}\n        onClick={() => clickLink(\"/map\")}\n        onKeyPress={() => handleEnterKey(clickLink(\"/map\"))}\n      >\n        Map\n      </Menu.Item>\n      <Menu.Item\n        key=\"report\"\n        tabindex={0}\n        onClick={() => clickLink(\"/makereport\")}\n        onKeyPress={() => handleEnterKey(clickLink(\"/makereport\"))}\n      >\n        Make Report\n      </Menu.Item>\n      <Menu.Item\n        key=\"about\"\n        tabindex={0}\n        onClick={() => clickLink(\"/about\")}\n        onKeyPress={() => handleEnterKey(clickLink(\"/about\"))}\n      >\n        About\n      </Menu.Item>\n    </>)\n  }\n\n  const menu = () => {\n    return (<Menu\n      mode=\"horizontal\"\n      defaultSelectedKeys={[\"home\"]}\n      id=\"nav\"\n      key=\"nav\"\n      style={{ border: \"none\" }}\n    >\n      {links()}\n      {user ? loggedIn() : loggedOut()}\n    </Menu>\n    )};\n\n  const mobileMenu = () => {\n    return (\n      <Menu\n        mode=\"horizontal\"\n        defaultSelectedKeys={[\"home\"]}\n        id=\"nav\"\n        key=\"nav\"\n        style={{ border: \"none\" }}\n      >\n        {links()}\n        {user ? null : loggedOut()}\n      </Menu>\n    );\n  };\n\n  return (\n    <>\n      <Header\n        style={{\n          backgroundColor: \"#fff\",\n          maxWidth: \"1920px\",\n          margin: \"0 auto\",\n          padding: xs ? \" 0 20px\" : \" 0 50px\",\n          marginBottom: \"30px\"\n        }}\n      >\n        <Row >\n          <Col lg={4} md={5} sm={8} xs={12}>\n            <a href=\"/\" id=\"logo\">\n              <Typography.Title level={3} style={{ lineHeight: \".8\", marginTop: \"20px\" }}>\n                Accessible Stockholm\n              </Typography.Title>\n            </a>\n          </Col>\n          <Col lg={20} md={19} sm={0} xs={0}>\n            <Row justify=\"end\">{menu()}</Row>\n          </Col>\n          <Col lg={0} md={0} sm={16} xs={12}>\n            <Row justify=\"end\" style={{marginTop: \"20px\"}}>\n              <Dropdown overlay={mobileMenu} trigger={[\"click\"]}>\n                <MenuOutlined\n                  className={styles.focus}\n                  tabindex={0}\n                  aria-haspopup=\"true\"\n                  style={{ fontSize: \"1.5rem\", marginTop: \"8px\" }}\n                  onKeyPress={(event) =>\n                    handleEnterKey(event.currentTarget.click())\n                  }\n                />\n              </Dropdown>\n              {user && (\n                <Dropdown overlay={avatarMenu} trigger={[\"click\"]}>\n                  <Avatar\n                    tabindex={0}\n                    aria-haspopup=\"true\"\n                    style={{\n                      backgroundColor: \"#154d42 \",\n                      verticalAlign: \"middle\",\n                      marginLeft: \"20px\",\n                    }}\n                    className={styles.focus}\n                    size=\"large\"\n                    //keyboard opens dropdown\n                    onKeyPress={(event) =>\n                      handleEnterKey(event.currentTarget.click())\n                    }\n                  >\n                    {avatarInitial}\n                  </Avatar>\n                </Dropdown>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Header>\n    </>\n  );\n}\n","/Users/carytanner/code-projects/bike-msgs/client/src/utils/useRouter.js",[],"/Users/carytanner/code-projects/bike-msgs/client/src/components/Login/Login.js",["144","145"],"import React, {useEffect} from \"react\";\nimport styles from \"./Login.module.css\";\nimport {\n  Form,\n  Input,\n  Button,\n  \n  Row,\n  Col,\n  Typography,\n  Alert,\n  message\n} from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport QueueAnim from \"rc-queue-anim\";\nimport {fetchLoginUser} from '../../redux/slices/authSlice'\nimport {useRouter} from '../../utils/useRouter'\nimport {useDispatch, useSelector} from 'react-redux'\n\nexport default function Login() {\n  const dispatch = useDispatch()\n  const {error, isAuthenticated, isLoading} = useSelector( state => state.auth)\n  \n\n\nconst onFinish = (values) => {\n    dispatch(fetchLoginUser(values))\n    \n  };\n\n  // @TODO push to previous page if successful login\n  const router = useRouter()\n\n  useEffect(()=> {\n    if(!error){\n      if(isAuthenticated){\n        success()\n        \n        router.push(\"/\")\n      }\n    }\n  }, [isAuthenticated, error])\n\n//success pop message \nconst success = () => {\n  message.success('Login successful');\n};\n\n\n\n  return (\n    <>\n      <div className={styles.container}>\n        <Row justify=\"center\">\n          <Col\n            lg={8}\n            md={12}\n            sm={16}\n            xs={24}\n            style={{\n              boxShadow: \"1px 1px 5px rgba(0, 0, 0, .15)\",\n              padding: \"10px 10px 100px 10px\",\n              borderRadius: \"15px\",\n            }}\n          >\n            <QueueAnim>\n              <Typography.Title level={3}>Log In</Typography.Title>\n              \n              <Form\n                name=\"login\"\n                className=\"form\"\n                layout=\"vertical\"\n                onFinish={onFinish}\n                requiredMark={false}\n                size=\"large\"\n                key=\"a\"\n              >\n                <Form.Item\n                  name=\"email\"\n                  rules={[\n                    {\n                      type: \"email\",\n                      message: \"Not a valid email\",\n                    },\n                    {\n                      required: true,\n                      message: \"Please enter email\",\n                    },\n                  ]}\n                >\n                  <Input autoComplete=\"email\" prefix=\"@\" placeholder=\"Email\" aria-label=\"Email\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"password\"\n                  rules={[{ required: true, message: \"Password required\" }]}\n                >\n                  <Input.Password\n                  autoComplete=\"password\"\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    aria-label=\"Password\"\n                  />\n                </Form.Item>\n\n                {error && <Form.Item>\n                  <Alert type=\"error\" showIcon message=\"Incorrect email/password\"></Alert>\n                </Form.Item>}\n\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{ width: \"100%\", marginBottom: \"1rem\" }}\n                    aria-label=\"Log In\"\n                    loading={isLoading ? true : false}\n                  >\n                    Log in\n                  </Button>\n                  <Typography.Text type=\"secondary\">\n                    New to Accessible Stockholm?\n                  </Typography.Text>{\" \"}\n                  <Typography.Link tabindex={0} href=\"/signup\">\n                    Register Now!\n                  </Typography.Link>\n                </Form.Item>\n              </Form>\n            </QueueAnim>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n","/Users/carytanner/code-projects/bike-msgs/client/src/components/Footer/Footer.js",["146"],"import React from 'react'\nimport styles from './Footer.module.css'\nimport {Layout, Typography, Grid} from 'antd'\n\nexport default function Footer(){\n    const { useBreakpoint } = Grid;\n  const { xs } = useBreakpoint();\n    const {Footer} = Layout\n\n    return(\n        <>\n        <Footer style={{maxWidth: \"1920px\", margin: \"0 auto\", padding: xs ? \"0 20px\" : null}}>\n\n        <Typography.Title level={4}> Footer goes here!</Typography.Title>\n        </Footer>\n        </>\n    )\n}","/Users/carytanner/code-projects/bike-msgs/client/src/components/SignUp/SignUp.js",["147"],"import React, {useEffect} from \"react\";\nimport styles from \"./SignUp.module.css\";\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Typography,\n  Alert,\n  message\n} from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport QueueAnim from \"rc-queue-anim\";\nimport {useDispatch, useSelector} from 'react-redux'\nimport {fetchRegisterUser} from '../../redux/slices/authSlice'\nimport {useRouter} from '../../utils/useRouter'\n\n\nexport default function SignUp() {\nconst dispatch = useDispatch()\nconst {error, isAuthenticated} = useSelector(state => state.auth)\n\n  \n    const onFinish = (values) => {\n    \n    dispatch(fetchRegisterUser(values))\n  };\n\n  // @TODO push to previous page if successful login\n  const router = useRouter()\n\n  useEffect(()=> {\n    if(!error){\n      if(isAuthenticated){\n        success()\n        \n        router.push(\"/\")\n      }\n    }\n  }, [isAuthenticated, error])\n\n  //success pop message \nconst success = () => {\n  message.success('Sign up successful');\n};\n\n\n\n  return (\n    <>\n      <div className={styles.container}>\n        <Row justify=\"center\">\n          <Col\n            lg={8}\n            md={12}\n            sm={16}\n            xs={24}\n            style={{\n              boxShadow: \"1px 1px 5px rgba(0, 0, 0, .15)\",\n              padding: \"10px 10px 100px 10px\",\n              borderRadius: \"15px\",\n            }}\n          >\n            <Typography.Title level={3}>Sign Up</Typography.Title>\n            <QueueAnim>\n            <Form\n              name=\"login\"\n              className=\"form\"\n              layout=\"vertical\"\n              onFinish={onFinish}\n              size=\"large\"\n              key=\"a\"\n            >\n              <Form.Item\n                name=\"name\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter name\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined />}\n                  placeholder=\"Name\"\n                  aria-label=\"Name\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  {\n                    type: \"email\",\n                    message: \"Not a valid email\",\n                  },\n                  {\n                    required: true,\n                    message: \"Please enter email\",\n                  },\n                ]}\n              >\n                <Input autoComplete=\"email\" prefix=\"@\" placeholder=\"Email\" aria-label=\"Email\" />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[{ required: true, message: \"Password required\" }]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined />}\n                  autoComplete=\"new-password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  aria-label=\"Password\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"confirm\"\n                autoComplete=\"new-password\"\n                dependencies={[\"password\"]}\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please confirm your password\",\n                  },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value) {\n                      if (!value || getFieldValue(\"password\") === value) {\n                        return Promise.resolve();\n                      }\n\n                      return Promise.reject(\"Passwords do not match\");\n                    },\n                  }),\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined />}\n                  placeholder=\"Confirm Password\"\n                  aria-label=\"Confirm Password\"\n                />\n              </Form.Item>\n              {error && <Form.Item>\n                  <Alert type=\"error\" showIcon message={error}></Alert>\n                </Form.Item>}\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                  style={{ width: \"100%\", marginBottom: \"1rem\" }}\n                  aria-label=\"Log In\"\n                >\n                  Sign Up\n                </Button>\n                <Typography.Text type=\"secondary\">\n                  Already have an account?\n                </Typography.Text>{\" \"}\n                <Typography.Link tabindex={0} href=\"/login\">Log In</Typography.Link>\n              </Form.Item>\n            </Form>\n            </QueueAnim>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n","/Users/carytanner/code-projects/bike-msgs/client/src/components/MakeReport/MakeReport.js",[],"/Users/carytanner/code-projects/bike-msgs/client/src/components/HomePage/HomePage.js",["148"],"import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {fetchVerifyUser} from '../../redux/slices/authSlice'\n\n\nexport default function HomePage(){\n  const dispatch = useDispatch()\n const {token} = useSelector(state => state.auth)\n \n  useEffect(()=> {\n    \n    dispatch(fetchVerifyUser(token))\n\n  }, [token])\n\n  return (\n      <>\n      <p>home page mchome face </p>\n      </>\n  ) \n   \n    \n}","/Users/carytanner/code-projects/bike-msgs/client/src/redux/slices/authSlice.js",[],"/Users/carytanner/code-projects/bike-msgs/client/src/api/userAuthAPI.js",[],"/Users/carytanner/code-projects/bike-msgs/client/src/utils/utils.js",[],"/Users/carytanner/code-projects/bike-msgs/client/src/components/ReportMap/ReportMap.js",["149"],"import React, { useEffect, useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./ReportMap.module.css\";\nimport mapboxgl from \"mapbox-gl\";\nimport { mapbox_public_key } from \"../../api/reportsAPI\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setVisibleReports,\n} from \"../../redux/slices/reportSlice\";\n\n\nimport circle2 from \"../../images/circle2.png\";\nimport roadblock2 from \"../../images/roadblock2.png\";\nimport triangle2 from \"../../images/triangle2.png\";\nimport square2 from \"../../images/square2.png\";\n\nmapboxgl.accessToken = mapbox_public_key;\n\nexport default function ReportMap() {\n  const dispatch = useDispatch();\n  const { reportsInGeojson, reportsFilter, popupCoor } = useSelector((state) => state.reports);\n\n  //local state for filtering report\n  const [mapState, setMapState] = useState(null);\n  \n\n  // div in DOM\n  const mapContainerRef = useRef();\n\n  //keep map around Stockholm\n  const bounds = [\n    [17.77461405663, 59.125781], //southwest\n    [18.4248425, 59.479973], //northeast\n  ];\n\n  // array of layer id names\n  const allLayers = [\n    \"Reported-layer\",\n    \"Scheduled-layer\",\n    \"Fixed-layer\",\n    \"Unresolved-layer\",\n  ];\n\n  //create map instance and add all styles/markers\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/light-v10\",\n      center: [18.07178990362403, 59.323730425969565],\n      zoom: 10,\n      maxBounds: bounds,\n    });\n\n    // add zoom buttons && fullscreen\n    map.addControl(\n      new mapboxgl.NavigationControl({ showCompass: false }),\n      \"bottom-right\"\n    );\n    map.addControl(new mapboxgl.FullscreenControl());\n\n    //add data saved in state in redux\n    map.on(\"load\", () => {\n      map.addSource(\"reports-markers\", {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: reportsInGeojson,\n        },\n      });\n\n      //custom marker for each status\n      const images = [\n        { url: circle2, id: \"circle-img\" }, //fixed\n        { url: square2, id: \"square-img\" }, //scheduled\n        { url: roadblock2, id: \"roadblock-img\" }, //reported\n        { url: triangle2, id: \"triangle-img\" }, //unresolved\n      ];\n\n      //make all marker images available\n      Promise.all(\n        images.map(\n          (img) =>\n            new Promise((resolve, reject) => {\n              map.loadImage(img.url, function (error, res) {\n                map.addImage(img.id, res);\n                resolve();\n              });\n            })\n        )\n      ).then(\n        reportsInGeojson.forEach((feature) => {\n          //map images to status\n          const symbols = {\n            Reported: \"roadblock-img\",\n            Fixed: \"circle-img\",\n            Scheduled: \"square-img\",\n            Unresolved: \"triangle-img\",\n          };\n\n          let layerId = feature.properties.status;\n          let symbol = symbols[layerId];\n\n          if (!map.getLayer(layerId)) {\n            map.addLayer({\n              id: layerId + \"-layer\",\n              type: \"symbol\",\n              source: \"reports-markers\",\n              layout: {\n                \"icon-image\": symbol,\n                \"icon-allow-overlap\": true,\n                \"icon-size\": [\n                  \"interpolate\",\n                  [\"linear\"],\n                  [\"zoom\"],\n                  10,\n                  1,\n                  15,\n                  1.5,\n                ],\n              },\n\n              filter: [\"==\", \"status\", layerId],\n            });\n          }\n        })\n      );\n        \n      // send reports to reports list value in redux state\n      dispatch(setVisibleReports(reportsInGeojson));\n\n      //set map to state to filter later (set on load so all styles finish loading)\n      setMapState(map);\n    });\n\n  \n\n    let popup = new mapboxgl.Popup({\n      closeButton: false,\n    });\n\n    //show title pop up on hover\n    allLayers.forEach((layer) =>\n      map.on(\"mousemove\", layer, (event) => {\n        // Change the cursor style as a UI indicator.\n        map.getCanvas().style.cursor = \"pointer\";\n\n        // Populate the popup and set its coordinates based on the feature.\n        let feature = event.features[0];\n        popup\n          .setLngLat(feature.geometry.coordinates)\n          .setText(feature.properties.title)\n          .addTo(map);\n      })\n    );\n\n    allLayers.forEach((layer) =>\n      map.on(\"mouseleave\", layer, () => {\n        map.getCanvas().style.cursor = \"\";\n        popup.remove();\n      })\n    );\n\n  \n    \n    return () => map.remove();\n  }, [reportsInGeojson]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  //filter map markers according filter list from redux(set by ReportFilter.js UI)\n  useEffect(() => {\n    filterMarkers();\n    // if (mapState) {\n    //   let features = mapState.queryRenderedFeatures({\n    //     layers: reportsFilter,\n    //   });\n    //   console.log(reportsFilter);     // <-- this  and moveEnd cause state mutation according to redux???\n    //   console.log(features);\n    //   if (features) {\n    //     dispatch(setVisibleReports(features));\n    //   }\n    // }\n  }, [reportsFilter]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const filterMarkers = () => {\n    if (mapState && reportsFilter) {\n      allLayers.forEach((layer) => {\n        mapState.setLayoutProperty(\n          layer,\n          \"visibility\",\n          reportsFilter.includes(layer) ? \"visible\" : \"none\"\n        );\n      });\n    }\n  };\n  \n\n  // useEffect(() => {\n  //   if (mapState) {\n  //     mapState.on(\"moveend\", (event) => {\n  //       if (event.originalEvent){\n  //       let features = mapState.queryRenderedFeatures({\n  //         layers: allLayers,\n  //       });\n\n  //       if (features) {\n  //         console.log(features)\n  //         dispatch(setVisibleReports(features));\n  //       }\n  //       }\n  //     });\n  //   }\n  // });\n\n  const popUpRef = useRef(new mapboxgl.Popup({ closeButton: false}));\n\n\n  useEffect(()=> {\n    if (popupCoor == null && popUpRef.current) {popUpRef.current.remove()}\n    else if (mapState && popupCoor) {\n    \n    const popupNode = document.createElement('div');\n    ReactDOM.render((<h4>{popupCoor.title}</h4>), popupNode);\n    // set popup on map\n    popUpRef.current.setLngLat(popupCoor.coordinates).setDOMContent(popupNode).addTo(mapState);\n    }\n   \n  }, [popupCoor])\n\n  return (\n    <>\n      <div className={styles.mapContainer} ref={mapContainerRef} id=\"map\" />;\n    </>\n  );\n}\n","/Users/carytanner/code-projects/bike-msgs/client/src/api/reportsAPI.js",[],"/Users/carytanner/code-projects/bike-msgs/client/src/redux/slices/reportSlice.js",[],"/Users/carytanner/code-projects/bike-msgs/client/src/components/ReportDetails/ReportDetails.js",[],"/Users/carytanner/code-projects/bike-msgs/client/src/components/MapLanding/MapLanding.js",["150","151"],"import React, {useEffect} from 'react'\nimport styles from './MapLanding.module.css'\nimport ReportMap from '../ReportMap/ReportMap'\nimport ReportList from '../ReportList/ReportList'\nimport ReportFilter from '../ReportFilter/ReportFilter'\nimport {Col, Row, Grid, Typography } from 'antd'\nimport {useDispatch} from 'react-redux'\nimport {fetchAllReports} from '../../redux/slices/reportSlice'\nimport circle2 from '../../images/circle2.png';\nimport roadblock2 from '../../images/roadblock2.png'\nimport triangle2 from '../../images/triangle2.png'\nimport square2 from '../../images/square2.png'\n\nexport default function MapLanding(){\n  const {Text } = Typography\n    const { useBreakpoint } = Grid;\n  const { xs, sm } = useBreakpoint();\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchAllReports());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const legend = () => {\n    return(\n      <div className={styles.legend}>\n      <div>\n      <img src={roadblock2} alt=\"red roadblock symbol\"></img>\n      <Text>&nbsp;Reported</Text>\n      </div>\n      <div>\n      <img src={square2} alt=\"yellow square\"></img>\n      <Text>&nbsp;Scheduled</Text>\n      </div>\n      <div>\n      <img src={circle2} alt=\"green circle\"></img>\n      <Text>&nbsp;Fixed</Text>\n      </div>\n      <div>\n      <img src={triangle2} alt=\"blue triangle\"></img>\n      <Text>&nbsp;Unresolved</Text>\n      </div>\n      \n   </div>\n    )\n  }\n    \n    return (\n        <Row justify=\"space-between\" gutter={16}>   \n         <Col md={8} sm={24}>\n         <a href=\"#map\" className={styles.skipToMap}>\n          Skip to Map\n        </a>  \n            \n            <ReportFilter />\n            <ReportList />\n        </Col> \n         <Col md={16} sm={24}> \n        {legend()}\n        <ReportMap />\n        </Col> \n        </Row>\n    )\n}","/Users/carytanner/code-projects/bike-msgs/client/src/components/ReportList/ReportList.js",["152"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./ReportList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Typography, Divider, Button, Skeleton } from \"antd\";\nimport QueueAnim from \"rc-queue-anim\";\nimport { handleEnterKey } from \"../../utils/utils\";\nimport { useRouter } from \"../../utils/useRouter\";\nimport { EnvironmentOutlined } from \"@ant-design/icons\";\nimport circle2 from '../../images/circle2.png';\nimport roadblock2 from '../../images/roadblock2.png'\nimport triangle2 from '../../images/triangle2.png'\nimport square2 from '../../images/square2.png'\nimport {setPopupCoor} from '../../redux/slices/reportSlice'\n\nexport default function ReportList() {\n    const dispatch = useDispatch()\n  const { visibleReports, popupCoor } = useSelector((state) => state.reports);\n\n  const [currentReports, setCurrentReports] = useState(null);\n\n  const router = useRouter();\n\n  useEffect(() => {\n    if (visibleReports) setCurrentReports(visibleReports);\n  }, [visibleReports]);\n\n  const item = (report) => {\n    const { title, status, category, id, formattedAddress } = report.properties;\n    const { coordinates } = report.geometry \n\n    //image next to status\n    let imgSrc = {\n      Reported: roadblock2,\n      Scheduled: square2,\n      Fixed: circle2,\n      Unresolved: triangle2,\n    };\n\n    let dotStyle = {\n      display: \"inline-block\",\n      height: \".75rem\",\n      width: \".75rem\",\n        \n    };\n\n    const handleClick = () => {\n      router.push(`/reports/${id}`);\n    };\n\n    // \"hover\" or focus sends coordinates to redux to send to map to show popup over report marker\n    const sendCoor = (data) => {\n        dispatch(setPopupCoor(data))\n    }\n\n    return (\n      <QueueAnim>\n        <div\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={0}\n          className={styles.listItem}\n          id={`listItem-${id}`}\n          key={`key-${id}`}\n          onMouseEnter={()=> sendCoor({coordinates, title})}\n          onFocus={()=> sendCoor({coordinates, title})}\n          onMouseLeave={()=> sendCoor(null)}\n          onBlur={() => sendCoor(null)}\n        >\n          <Divider orientation=\"left\">{title}</Divider>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", marginBottom: \"1rem\"}}>\n            <div>\n              <img src={imgSrc[status]} alt=\"Colored symbol for status\" style={dotStyle}></img>&nbsp;{status}\n            </div>\n\n            <div>Category: {category}</div>\n          </div>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div style={{maxWidth: \"40%\"}}>{formattedAddress}</div>\n            <Button\n              type=\"primary\"\n              onClick={handleClick}\n              onKeyPress={() => handleEnterKey(handleClick())}\n            >\n              Full Details\n            </Button>\n          </div>\n        </div>\n      </QueueAnim>\n    );\n  };\n\n  return (\n    <>\n      <div className={styles.listContainer}>\n        {!currentReports ? (\n          <>\n            <Skeleton loading={!currentReports} active>\n              <Skeleton.Button loading={!currentReports}></Skeleton.Button>\n            </Skeleton>\n            <Skeleton loading={!currentReports} active>\n              <Skeleton.Button loading={!currentReports}></Skeleton.Button>\n            </Skeleton>\n            <Skeleton loading={!currentReports} active>\n              <Skeleton.Button loading={!currentReports}></Skeleton.Button>\n            </Skeleton>\n            <Skeleton loading={!currentReports} active>\n              <Skeleton.Button loading={!currentReports}></Skeleton.Button>\n            </Skeleton>\n          </>\n        ) : null}\n\n        {currentReports && currentReports.length === 0 ? (\n          <div className={styles.moveToFind}>\n            <EnvironmentOutlined />\n\n            <Typography.Title level={5}>\n              &nbsp;Move map to find reports\n            </Typography.Title>\n          </div>\n        ) : null}\n        {currentReports && currentReports.map((report) => item(report))}\n      </div>\n    </>\n  );\n}\n","/Users/carytanner/code-projects/bike-msgs/client/src/components/ReportFilter/ReportFilter.js",["153","154"],"import React, {useEffect} from \"react\";\nimport styles from \"./ReportFilter.module.css\";\nimport { Typography,  Radio } from \"antd\";\nimport {useDispatch} from 'react-redux'\nimport {setReportsFilter} from '../../redux/slices/reportSlice'\n\n\nexport default function ReportFilter() {\n const dispatch = useDispatch()\n \n\n \n const dispatchFilter = (event) =>{\n    \n    // send button value as an array redux state \n    //written as \"status2 + \"-layer\" for layer filter  \n    let filter = event.target.value.split(' ')\n    \n    dispatch(setReportsFilter(filter))\n }\n    \n  return (\n    \n    <>\n    <Typography.Title level={3}>Accessibility Reports</Typography.Title>\n    <div style={{display: \"flex\", justifyContent: \"center\", margin: \"1.5rem 0 .5rem 0\"}}>\n    <Radio.Group tabIndex={0} size=\"small\" onChange={dispatchFilter} defaultValue='Reported-layer Scheduled-layer Fixed-layer Unresolved-layer' buttonStyle=\"solid\">\n      <Radio.Button  value=\"Reported-layer Scheduled-layer Fixed-layer Unresolved-layer\">Show all</Radio.Button>\n      <Radio.Button  value=\"Reported-layer\">Reported</Radio.Button>\n      <Radio.Button   value=\"Scheduled-layer\">Scheduled</Radio.Button>\n      <Radio.Button  value=\"Fixed-layer\">Fixed</Radio.Button>\n      <Radio.Button  value=\"Unresolved-layer\">Unresolved</Radio.Button>\n    </Radio.Group>\n    </div>\n    </>\n  );\n}\n","/Users/carytanner/code-projects/bike-msgs/client/src/utils/useDebounce.js",["155"],"import React, {useEffect, useState} from 'react'\n\n\n// Hook\n\n\n\nexport function useDebounce(value, delay) {\n\n    // State and setters for debounced value\n  \n    const [debouncedValue, setDebouncedValue] = useState(value);\n  \n  \n  \n    useEffect(\n  \n      () => {\n  \n        // Update debounced value after delay\n  \n        const handler = setTimeout(() => {\n  \n          setDebouncedValue(value);\n  \n        }, delay);\n  \n  \n  \n        // Cancel the timeout if value changes (also on delay change or unmount)\n  \n        // This is how we prevent debounced value from updating if value is changed ...\n  \n        // .. within the delay period. Timeout gets cleared and restarted.\n  \n        return () => {\n  \n          clearTimeout(handler);\n  \n        };\n  \n      },\n  \n      [value, delay] // Only re-call effect if value or delay changes\n  \n    );\n  \n  \n  \n    return debouncedValue;\n  \n  }",["156","157","158"],"/Users/carytanner/code-projects/bike-msgs/client/src/redux/slices/mapSlice.js",[],"/Users/carytanner/code-projects/bike-msgs/client/src/components/ContextMap/Map/Map.js",["159","160","161","162"],"/Users/carytanner/code-projects/bike-msgs/client/src/MapContext.js",[],"/Users/carytanner/code-projects/bike-msgs/client/src/components/ContextMap/ReportsList/ReportsList.js",["163","164","165","166"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./ReportsList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Typography, Divider, Button, Skeleton } from \"antd\";\nimport QueueAnim from \"rc-queue-anim\";\nimport { handleEnterKey } from \"../../../utils/utils\";\nimport { useRouter } from \"../../../utils/useRouter\";\nimport { EnvironmentOutlined } from \"@ant-design/icons\";\nimport circle2 from '../../../images/circle2.png';\nimport roadblock2 from '../../../images/roadblock2.png'\nimport triangle2 from '../../../images/triangle2.png'\nimport square2 from '../../../images/square2.png'\n//import {setPopupCoor} from '../../redux/slices/reportSlice'\n\nexport default function ReportList() {\n    const dispatch = useDispatch()\n  const { visibleReports, popupCoor } = useSelector((state) => state.reports);\n\n  const [currentReports, setCurrentReports] = useState(null);\n\n  const router = useRouter();\n\n  useEffect(() => {\n    \n  }, );\n\n  const item = (report) => {\n    const { title, status, category, id, formattedAddress } = report.properties;\n    const { coordinates } = report.geometry \n\n    //image next to status\n    let imgSrc = {\n      Reported: roadblock2,\n      Scheduled: square2,\n      Fixed: circle2,\n      Unresolved: triangle2,\n    };\n\n    let dotStyle = {\n      display: \"inline-block\",\n      height: \".75rem\",\n      width: \".75rem\",\n        \n    };\n\n    const handleClick = () => {\n      router.push(`/reports/${id}`);\n    };\n\n    // \"hover\" or focus sends coordinates to redux to send to map to show popup over report marker\n    const sendCoor = (data) => {\n        //dispatch(setPopupCoor(data))\n    }\n\n    return (\n      <QueueAnim>\n        <div\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={0}\n          className={styles.listItem}\n          id={`listItem-${id}`}\n          key={`key-${id}`}\n          onMouseEnter={()=> sendCoor({coordinates, title})}\n          onFocus={()=> sendCoor({coordinates, title})}\n          onMouseLeave={()=> sendCoor(null)}\n          onBlur={() => sendCoor(null)}\n        >\n          <Divider orientation=\"left\">{title}</Divider>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", marginBottom: \"1rem\"}}>\n            <div>\n              <img src={imgSrc[status]} alt=\"Colored symbol for status\" style={dotStyle}></img>&nbsp;{status}\n            </div>\n\n            <div>Category: {category}</div>\n          </div>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div style={{maxWidth: \"40%\"}}>{formattedAddress}</div>\n            <Button\n              type=\"primary\"\n              onClick={handleClick}\n              onKeyPress={() => handleEnterKey(handleClick())}\n            >\n              Full Details\n            </Button>\n          </div>\n        </div>\n      </QueueAnim>\n    );\n  };\n\n  return (\n    <>\n      <div className={styles.listContainer}>\n        {!currentReports ? (\n          <>\n            <Skeleton loading={!currentReports} active>\n              <Skeleton.Button loading={!currentReports}></Skeleton.Button>\n            </Skeleton>\n            <Skeleton loading={!currentReports} active>\n              <Skeleton.Button loading={!currentReports}></Skeleton.Button>\n            </Skeleton>\n            <Skeleton loading={!currentReports} active>\n              <Skeleton.Button loading={!currentReports}></Skeleton.Button>\n            </Skeleton>\n            <Skeleton loading={!currentReports} active>\n              <Skeleton.Button loading={!currentReports}></Skeleton.Button>\n            </Skeleton>\n          </>\n        ) : null}\n\n        {currentReports && currentReports.length === 0 ? (\n          <div className={styles.moveToFind}>\n            <EnvironmentOutlined />\n\n            <Typography.Title level={5}>\n              &nbsp;Move map to find reports\n            </Typography.Title>\n          </div>\n        ) : null}\n        {currentReports && currentReports.map((report) => item(report))}\n      </div>\n    </>\n  );\n}","/Users/carytanner/code-projects/bike-msgs/client/src/components/ContextMap/ReportsFilter/ReportsFilter.js",["167","168","169","170"],"import React, {useEffect, useContext} from \"react\";\nimport styles from \"./ReportsFilter.module.css\";\nimport { Typography,  Radio } from \"antd\";\nimport {useDispatch, useSelector} from 'react-redux'\n\nimport MapContext from \"../../../MapContext\";\nimport {addReportsLayers} from './ReportsLayers'\n\nexport default function ReportFilter() {\n const dispatch = useDispatch()\n const {reportsInGeojson }  = useSelector(state => state.reports)\n const map = useContext(MapContext)\n\n useEffect(() => {\n   console.log('adding reports')\n    addReportsLayers(map,reportsInGeojson)\n }, [])\n\n \n const dispatchFilter = (event) =>{\n    \n    // send button value as an array redux state \n    //written as \"status2 + \"-layer\" for layer filter  \n    let filter = event.target.value.split(' ')\n    \n    //dispatch(setReportsFilter(filter))\n }\n    \n  return (\n    \n    <>\n    <Typography.Title level={3}>Accessibility Reports</Typography.Title>\n    <div style={{display: \"flex\", justifyContent: \"center\", margin: \"1.5rem 0 .5rem 0\"}}>\n    <Radio.Group tabIndex={0} size=\"small\" onChange={dispatchFilter} defaultValue='Reported-layer Scheduled-layer Fixed-layer Unresolved-layer' buttonStyle=\"solid\">\n      <Radio.Button  value=\"Reported-layer Scheduled-layer Fixed-layer Unresolved-layer\">Show all</Radio.Button>\n      <Radio.Button  value=\"Reported-layer\">Reported</Radio.Button>\n      <Radio.Button   value=\"Scheduled-layer\">Scheduled</Radio.Button>\n      <Radio.Button  value=\"Fixed-layer\">Fixed</Radio.Button>\n      <Radio.Button  value=\"Unresolved-layer\">Unresolved</Radio.Button>\n    </Radio.Group>\n    </div>\n    </>\n  );\n}\n","/Users/carytanner/code-projects/bike-msgs/client/src/components/ContextMap/ReportsFilter/ReportsLayers.js",[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"181","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":16},{"ruleId":"177","severity":1,"message":"182","line":3,"column":32,"nodeType":"179","messageId":"180","endLine":3,"endColumn":36},{"ruleId":"177","severity":1,"message":"183","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":21},{"ruleId":"177","severity":1,"message":"184","line":5,"column":23,"nodeType":"179","messageId":"180","endLine":5,"endColumn":34},{"ruleId":"173","replacedBy":"185"},{"ruleId":"175","replacedBy":"186"},{"ruleId":"177","severity":1,"message":"187","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"188","line":10,"column":3,"nodeType":"179","messageId":"180","endLine":10,"endColumn":13},{"ruleId":"177","severity":1,"message":"189","line":32,"column":15,"nodeType":"179","messageId":"180","endLine":32,"endColumn":17},{"ruleId":"177","severity":1,"message":"190","line":14,"column":10,"nodeType":"179","messageId":"180","endLine":14,"endColumn":22},{"ruleId":"191","severity":1,"message":"192","line":42,"column":6,"nodeType":"193","endLine":42,"endColumn":30,"suggestions":"194"},{"ruleId":"177","severity":1,"message":"195","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"191","severity":1,"message":"192","line":41,"column":6,"nodeType":"193","endLine":41,"endColumn":30,"suggestions":"196"},{"ruleId":"191","severity":1,"message":"197","line":14,"column":6,"nodeType":"193","endLine":14,"endColumn":13,"suggestions":"198"},{"ruleId":"191","severity":1,"message":"199","line":226,"column":6,"nodeType":"193","endLine":226,"endColumn":17,"suggestions":"200"},{"ruleId":"177","severity":1,"message":"201","line":17,"column":11,"nodeType":"179","messageId":"180","endLine":17,"endColumn":13},{"ruleId":"177","severity":1,"message":"189","line":17,"column":15,"nodeType":"179","messageId":"180","endLine":17,"endColumn":17},{"ruleId":"177","severity":1,"message":"202","line":17,"column":27,"nodeType":"179","messageId":"180","endLine":17,"endColumn":36},{"ruleId":"177","severity":1,"message":"178","line":1,"column":16,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"195","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"203","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"171","replacedBy":"204"},{"ruleId":"173","replacedBy":"205"},{"ruleId":"175","replacedBy":"206"},{"ruleId":"177","severity":1,"message":"207","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":16},{"ruleId":"177","severity":1,"message":"208","line":15,"column":10,"nodeType":"179","messageId":"180","endLine":15,"endColumn":21},{"ruleId":"177","severity":1,"message":"209","line":47,"column":7,"nodeType":"179","messageId":"180","endLine":47,"endColumn":16},{"ruleId":"191","severity":1,"message":"210","line":80,"column":6,"nodeType":"193","endLine":80,"endColumn":8,"suggestions":"211"},{"ruleId":"177","severity":1,"message":"212","line":16,"column":11,"nodeType":"179","messageId":"180","endLine":16,"endColumn":19},{"ruleId":"177","severity":1,"message":"213","line":17,"column":11,"nodeType":"179","messageId":"180","endLine":17,"endColumn":25},{"ruleId":"177","severity":1,"message":"202","line":17,"column":27,"nodeType":"179","messageId":"180","endLine":17,"endColumn":36},{"ruleId":"177","severity":1,"message":"214","line":19,"column":26,"nodeType":"179","messageId":"180","endLine":19,"endColumn":43},{"ruleId":"177","severity":1,"message":"195","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"212","line":10,"column":8,"nodeType":"179","messageId":"180","endLine":10,"endColumn":16},{"ruleId":"191","severity":1,"message":"215","line":17,"column":5,"nodeType":"193","endLine":17,"endColumn":7,"suggestions":"216"},{"ruleId":"177","severity":1,"message":"217","line":24,"column":9,"nodeType":"179","messageId":"180","endLine":24,"endColumn":15},"jsx-a11y/accessible-emoji",[],"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Menu' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.",["218"],["219"],"'useState' is defined but never used.","'Popconfirm' is defined but never used.","'sm' is assigned a value but never used.","'UserOutlined' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","ArrayExpression",["220"],"'styles' is defined but never used.",["221"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["222"],"React Hook useEffect has a missing dependency: 'mapState'. Either include it or remove the dependency array.",["223"],"'xs' is assigned a value but never used.","'popupCoor' is assigned a value but never used.","'React' is defined but never used.",[],["218"],["219"],"'ReactDOM' is defined but never used.","'setMapStyle' is defined but never used.","'allLayers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'bounds'. Either include it or remove the dependency array.",["224"],"'dispatch' is assigned a value but never used.","'visibleReports' is assigned a value but never used.","'setCurrentReports' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'map' and 'reportsInGeojson'. Either include them or remove the dependency array.",["225"],"'filter' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"226","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [isAuthenticated, error, router]",{"range":"237","text":"238"},{"range":"239","text":"238"},"Update the dependencies array to be: [dispatch, token]",{"range":"240","text":"241"},"Update the dependencies array to be: [mapState, popupCoor]",{"range":"242","text":"243"},"Update the dependencies array to be: [bounds]",{"range":"244","text":"245"},"Update the dependencies array to be: [map, reportsInGeojson]",{"range":"246","text":"247"},[894,918],"[isAuthenticated, error, router]",[887,911],[343,350],"[dispatch, token]",[6364,6375],"[mapState, popupCoor]",[1921,1923],"[bounds]",[569,571],"[map, reportsInGeojson]"]